{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","components/singlePage2/index.js"],"names":["DEVICE_SIZES","Row","React","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","SingleTvPage","useState","tv","setTv","useEffect","Axios","get","match","params","id","then","res","data","catch","err","console","log","md","src","poster_path","name","overview","number_of_episodes","number_of_seasons","original_language","Array","isArray","genres","map","el","last_air_date"],"mappings":"0GAAA,yDAKIA,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,MAIxCC,EAAMC,IAAMC,YAAW,SAAUC,EAAMC,GACzC,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAYJ,EAAKI,UACjBC,EAAUL,EAAKM,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAQC,YAA8BT,EAAM,CAAC,WAAY,YAAa,YAAa,OAEnFU,EAAoBC,YAAmBT,EAAU,OACjDU,EAAaF,EAAoB,QACjCG,EAAU,GAed,OAdAjB,EAAakB,SAAQ,SAAUC,GAC7B,IAEIC,EAFAC,EAAYT,EAAMO,UACfP,EAAMO,GASb,IAAIG,EAAqB,OAAbH,EAAoB,IAAMA,EAAW,GACrC,OANVC,EADe,MAAbC,GAA0C,kBAAdA,EACvBA,EAAUD,KAEVC,IAISJ,EAAQM,KAAK,GAAKP,EAAaM,EAAQ,IAAMF,MAE7ClB,IAAMsB,cAAcb,EAAWc,YAAS,CAC1DpB,IAAKA,GACJO,EAAO,CACRL,UAAWmB,IAAWC,WAAM,EAAQ,CAACpB,EAAWO,EAAmBN,GAAa,cAAcoB,OAAOX,UAGzGhB,EAAI4B,YAAc,MAClB5B,EAAI6B,aAnCe,CACjBtB,WAAW,GAmCEP,O,6GCFA8B,UApCf,SAAsBnB,GAAQ,IAAD,EACLoB,mBAAS,IADJ,mBAClBC,EADkB,KACdC,EADc,KAUzB,OARAC,qBAAW,WACPC,IAAMC,IAAN,0CACuCzB,EAAM0B,MAAMC,OAAOC,GAD1D,8DAEEC,MAAK,SAAAC,GAAG,OAAIR,EAAMQ,EAAIC,SACvBC,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAIF,QAC3B,IAIE,cAAC,IAAD,CAAWtC,UAAU,YAArB,SACI,eAAC,IAAD,WACA,cAAC,IAAD,CAAKyC,GAAG,IAAR,SACA,qBAAKC,IAAG,0CAAqChB,EAAGiB,iBAEhD,eAAC,IAAD,CAAKF,GAAG,IAAR,UACA,6BAAKf,EAAGkB,OACA,4BAAIlB,EAAGmB,WACP,+BACI,2CAAcnB,EAAGoB,sBACjB,0CAAapB,EAAGqB,qBAChB,oDAAuBrB,EAAGsB,qBAC1B,yCACGC,MAAMC,QAAQxB,EAAGyB,SAAWzB,EAAGyB,OAAOC,KAAI,SAAAC,GAAE,OAC7C,sBAAMrD,UAAU,OAAhB,SAAwBqD,EAAGT,aAC7B,+CAAkBlB,EAAG4B","file":"static/js/5.43b93ffb.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import Axios from 'axios';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nfunction SingleTvPage(props) {\r\n    const [tv, setTv] = useState({});\r\n    useEffect (()=>{\r\n        Axios.get(\r\n            `https://api.themoviedb.org/3/tv/${props.match.params.id}}?api_key=f151e379e176f1899c71263936acbab8&language=en-US`\r\n        ).then(res => setTv(res.data))\r\n        .catch(err=> console.log(err));\r\n    },[]);\r\n    \r\n    \r\n    return (\r\n        <Container className=\"mt-5 mb-5\">\r\n            <Row>\r\n            <Col md='6'>\r\n            <img src={`https://image.tmdb.org/t/p/w500/${tv.poster_path}`} /> \r\n            </Col>\r\n            <Col md='6'>\r\n            <h2>{tv.name}</h2>\r\n                    <p>{tv.overview}</p>\r\n                    <ul>\r\n                        <li>Episodes:{tv.number_of_episodes}</li>\r\n                        <li>Seasons:{tv.number_of_seasons}</li>\r\n                        <li>Original Language:{tv.original_language}</li>\r\n                        <li>Genres:\r\n                          {Array.isArray(tv.genres) && tv.genres.map(el => \r\n                          <span className=\"ml-2\">{el.name}</span>)}</li>\r\n                        <li>Release Date:{tv.last_air_date}</li>\r\n\r\n                    </ul>\r\n            </Col>\r\n            </Row>\r\n        </Container>\r\n   \r\n    )\r\n}\r\n\r\nexport default SingleTvPage;\r\n"],"sourceRoot":""}